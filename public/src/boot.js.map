{"version":3,"sources":["src/boot.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YASA,mBAAS,CACR,4BAAY,EACZ;gBACG,uBAAc;gBACd,yBAAgB;gBAChB,qBAAc;gBACd,cAAO,CAAC,uBAAQ,EAAE;oBAChB,UAAU,EAAE,UAAC,IAAI;wBACf,MAAM,CAAC,IAAI,uBAAQ,CAAC,IAAI,yBAAU,CAAC;4BACjC,SAAS,EAAE,KAAK;yBACjB,CAAC,EAAE,IAAI,CAAC,CAAC;oBACZ,CAAC;oBACD,IAAI,EAAE,CAAC,WAAI,CAAC;iBACb,CAAC;aACJ,CAAC,CAAC","file":"src/boot.js","sourcesContent":["import {bootstrap} from 'angular2/platform/browser';\nimport {provide} from 'angular2/core';\nimport {FORM_PROVIDERS} from 'angular2/common';\nimport {ROUTER_PROVIDERS} from 'angular2/router';\nimport {Http, HTTP_PROVIDERS} from 'angular2/http';\nimport {AuthConfig, AuthHttp} from 'angular2-jwt';\n\nimport {AppComponent}     from './app.component';\n\nbootstrap(\n\tAppComponent,\n\t[\n    FORM_PROVIDERS,\n    ROUTER_PROVIDERS,\n    HTTP_PROVIDERS,\n    provide(AuthHttp, {\n      useFactory: (http) => {\n        return new AuthHttp(new AuthConfig({\n          tokenName: 'jwt'\n        }), http);\n      },\n      deps: [Http]\n    })\n\t]);\n"],"sourceRoot":"/source/"}